S   Single Responsibility Principles
Ответственность класса
    objects.User - взаимодействие со своей корзиной и с магазином
    objects.Store - содержание списка продуктов
    objects.Product - просто объект

    каждый класс имеет свою специализацию

O   Open-Closed Principle
БОльшая часть наших переменных и объектов приватные, но доступны через геттеры (closed)
Класс objects.User лучше не менять (closed)
Но мы всегда можем создать objects.User c новыми методами с помощью наследственности (extends) (open)

L   Liskov Substitution
Мы можем в качестве objects.User использовать как обычного objects.User, так и его объект-наследник (extends)
Программа от этого не перестаёт работать, это пример замены соответствующей принципу Лисковой

I   Interface Segregation
Интерфейсы маленькие (всего 1-2 метода) вместо одного интерфейса с 3+ методами

